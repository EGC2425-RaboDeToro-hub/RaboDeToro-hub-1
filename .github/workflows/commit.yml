name: Commit Syntax Validation

on:
  pull_request:
    branches: [main, develop]

jobs:
  check:
    name: Validate Commit Messages
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Obtén solo los dos últimos commits

      - name: Validate the penultimate commit message
        run: |
          set -e
          # Obtener los dos últimos commits
          commits=$(git log -2 --pretty=format:"%H")

          # Separar los commits en variables (último y penúltimo)
          commit_array=($commits)
          last_commit=${commit_array[0]}
          penultimate_commit=${commit_array[1]}

          echo "Último commit: $last_commit"
          echo "Penúltimo commit: $penultimate_commit"

          # Validar solo el penúltimo commit (omitimos el último porque es el merge)
          message=$(git log -1 --pretty=%B $penultimate_commit)

          echo "Validando commit: $penultimate_commit"
          echo "Mensaje del commit:"
          echo "$message"

          # Validar separación entre asunto y cuerpo
          if ! echo "$message" | grep -Pzo "(?s)^[^\n]+\n\n[^\n]+"; then
            echo "Error: El mensaje de commit debe separar el asunto y el cuerpo con una línea en blanco."
            exit 1
          fi

          # Extraer el asunto (primera línea)
          subject=$(echo "$message" | head -n 1)

          # Validar longitud del asunto
          if [ ${#subject} -gt 50 ]; then
            echo "Error: La línea del asunto debe tener un máximo de 50 caracteres."
            echo "Asunto: $subject"
            exit 1
          fi

          # Validar que el asunto comience con mayúscula
          if ! [[ "$subject" =~ ^[A-Z] ]]; then
            echo "Error: La línea del asunto debe comenzar con mayúscula."
            echo "Asunto: $subject"
            exit 1
          fi

          # Validar que el asunto no termine con un punto
          if [[ "$subject" =~ \.$ ]]; then
            echo "Error: La línea del asunto no debe terminar con un punto."
            echo "Asunto: $subject"
            exit 1
          fi

          # Validar uso del modo imperativo en el asunto
          if [[ "$subject" =~ ^(Añadida|Corregida|Actualizada) ]]; then
            echo "Error: La línea del asunto debe usar el modo imperativo."
            echo "Asunto: $subject"
            exit 1
          fi

          # Validar longitud de las líneas del cuerpo
          body=$(echo "$message" | tail -n +3)
          while IFS= read -r line; do
            if [ ${#line} -gt 72 ]; then
              echo "Error: Las líneas del cuerpo deben tener un máximo de 72 caracteres."
              echo "Línea larga: $line"
              exit 1
            fi
          done <<< "$body"

          # Validar prefijos de tipo
          if ! [[ "$subject" =~ ^(feat|fix|docs|style|test): ]]; then
            echo "Error: El asunto debe comenzar con uno de los prefijos permitidos (feat, fix, docs, style, test)."
            echo "Asunto: $subject"
            exit 1
          fi

          # Validar presencia de pie de commit si aplica
          if echo "$message" | grep -q "Refs #"; then
            footer=$(echo "$message" | tail -n 1)
            if ! [[ "$footer" =~ ^Refs #(null|[0-9]+)$ ]]; then
              echo "Error: El pie del commit debe seguir el formato 'Refs #numero-issue' o 'Refs #null'."
              echo "Pie: $footer"
              exit 1
            fi
          fi

          echo "El mensaje del commit $penultimate_commit es válido."
