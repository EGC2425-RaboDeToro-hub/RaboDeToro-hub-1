name: Deploy to Render

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:

  testing:

    name: Run Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: uvlhubdb_root_password
          MYSQL_DATABASE: uvlhubdb
          MYSQL_USER: uvlhubdb_user
          MYSQL_PASSWORD: uvlhubdb_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


    steps:

    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create required directories
      run: mkdir -p uploads

    - name: Run Tests
      env:
        FLASK_ENV: testing
        MARIADB_HOSTNAME: localhost
        MARIADB_PORT: 3306
        MARIADB_TEST_DATABASE: uvlhubdb_test
        MARIADB_USER: uvlhubdb_user
        MARIADB_PASSWORD: uvlhubdb_password
      run: |
        pytest app/modules/ --ignore-glob='*selenium*'

  deploy:
    name: Deploy to Render
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Verify deploy URL is set
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK_URL }}" ]; then
            echo "Error: RENDER_DEPLOY_HOOK_URL is not set. Please configure it in your repository secrets.";
            exit 1;
          fi

      - name: Deploy to Render
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" "$deploy_url")
          if [ "$response" -ne 200 ]; then
            echo "Deploy failed with status code $response"
            exit 1
          fi
          echo "Deploy successful with status code $response"
