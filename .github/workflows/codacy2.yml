name: Codacy CI-2

on:
  push: # Ejecutar en cualquier rama
  pull_request: # Validar todas las pull requests
    types: [opened, synchronize, reopened]

jobs:
  lint-and-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.11', '3.12']
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Static Analysis with flake8
      run: |
        pip install flake8
        flake8 app/ --count --statistics --format=html --output-file=flake8-report-${{ matrix.os }}.html

    - name: Run Tests and Generate Coverage Report
      run: |
        pip install codacy-coverage
        coverage run -m pytest app/modules/ --ignore-glob='*selenium*'
        coverage xml
        coverage html
        python-codacy-coverage -r coverage.xml
      env:
        FLASK_ENV: testing
        MARIADB_HOSTNAME: 127.0.0.1
        MARIADB_PORT: 3306
        MARIADB_TEST_DATABASE: uvlhubdb_test
        MARIADB_USER: uvlhub_user
        MARIADB_PASSWORD: uvlhub_password
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

    - name: Upload Coverage and Flake8 Reports as Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: reports-${{ matrix.os }}
        path: |
          flake8-report-${{ matrix.os }}.html
          htmlcov/

  pr-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Validate PR Labels
      run: |
        if [[ -z "${{ github.event.pull_request.labels }}" ]]; then
          echo "❌ Pull Request no tiene etiquetas. Añade al menos una etiqueta."
          exit 1
        else
          echo "✅ Pull Request tiene etiquetas."
        fi

    - name: Validate PR Assignee
      run: |
        if [[ -z "${{ github.event.pull_request.assignee }}" ]]; then
          echo "❌ Pull Request no tiene un asignado. Asigna al menos un revisor."
          exit 1
        else
          echo "✅ Pull Request tiene un asignado."
        fi
